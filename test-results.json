{"numFailedTestSuites":1,"numFailedTests":4,"numPassedTestSuites":0,"numPassedTests":10,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":14,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1748624817730,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Departments API","GET /api/carbon/departments"],"duration":28,"failureDetails":[],"failureMessages":[],"fullName":"Departments API GET /api/carbon/departments returns departments for the authenticated user","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns departments for the authenticated user"},{"ancestorTitles":["Departments API","GET /api/carbon/departments"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Departments API GET /api/carbon/departments returns departments for a specific organization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"returns departments for a specific organization"},{"ancestorTitles":["Departments API","GET /api/carbon/departments"],"duration":36,"failureDetails":[],"failureMessages":[],"fullName":"Departments API GET /api/carbon/departments returns 401 when user is not authenticated","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 401 when user is not authenticated"},{"ancestorTitles":["Departments API","POST /api/carbon/departments"],"duration":48,"failureDetails":[{"matcherResult":{"actual":400,"expected":201,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 201\nReceived: 400","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 201\nReceived: 400\n    at Object.toBe (C:\\climabill\\climabill\\src\\__tests__\\app\\api\\carbon\\departments.test.ts:140:31)"],"fullName":"Departments API POST /api/carbon/departments creates a new department","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"creates a new department"},{"ancestorTitles":["Departments API","POST /api/carbon/departments"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Departments API POST /api/carbon/departments returns 400 when department name is missing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 400 when department name is missing"},{"ancestorTitles":["Departments API","POST /api/carbon/departments"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Departments API POST /api/carbon/departments returns 401 when user is not authenticated","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 401 when user is not authenticated"},{"ancestorTitles":["Departments API","PUT /api/carbon/departments"],"duration":5,"failureDetails":[{"matcherResult":{"actual":400,"expected":200,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 400","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 400\n    at Object.toBe (C:\\climabill\\climabill\\src\\__tests__\\app\\api\\carbon\\departments.test.ts:224:31)"],"fullName":"Departments API PUT /api/carbon/departments updates an existing department","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"updates an existing department"},{"ancestorTitles":["Departments API","PUT /api/carbon/departments"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Departments API PUT /api/carbon/departments returns 400 when department ID or name is missing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 400 when department ID or name is missing"},{"ancestorTitles":["Departments API","PUT /api/carbon/departments"],"duration":2,"failureDetails":[{"matcherResult":{"actual":400,"expected":404,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 404\nReceived: 400","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 404\nReceived: 400\n    at Object.toBe (C:\\climabill\\climabill\\src\\__tests__\\app\\api\\carbon\\departments.test.ts:276:31)"],"fullName":"Departments API PUT /api/carbon/departments returns 404 when department is not found","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"returns 404 when department is not found"},{"ancestorTitles":["Departments API","PUT /api/carbon/departments"],"duration":2,"failureDetails":[{"matcherResult":{"actual":400,"expected":403,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 403\nReceived: 400","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 403\nReceived: 400\n    at Object.toBe (C:\\climabill\\climabill\\src\\__tests__\\app\\api\\carbon\\departments.test.ts:310:31)"],"fullName":"Departments API PUT /api/carbon/departments returns 403 when user is not authorized to update the department","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"returns 403 when user is not authorized to update the department"},{"ancestorTitles":["Departments API","DELETE /api/carbon/departments"],"duration":8,"failureDetails":[],"failureMessages":[],"fullName":"Departments API DELETE /api/carbon/departments deletes an existing department","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"deletes an existing department"},{"ancestorTitles":["Departments API","DELETE /api/carbon/departments"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Departments API DELETE /api/carbon/departments returns 400 when department ID is missing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 400 when department ID is missing"},{"ancestorTitles":["Departments API","DELETE /api/carbon/departments"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Departments API DELETE /api/carbon/departments returns 404 when department is not found","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 404 when department is not found"},{"ancestorTitles":["Departments API","DELETE /api/carbon/departments"],"duration":17,"failureDetails":[],"failureMessages":[],"fullName":"Departments API DELETE /api/carbon/departments returns 403 when user is not authorized to delete the department","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"returns 403 when user is not authorized to delete the department"}],"endTime":1748624824544,"message":"  ● Departments API › POST /api/carbon/departments › creates a new department\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 201\n    Received: 400\n\n    \u001b[0m \u001b[90m 138 |\u001b[39m       \n     \u001b[90m 139 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 140 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m201\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 141 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({ department\u001b[33m:\u001b[39m createdDepartment })\u001b[33m;\u001b[39m\n     \u001b[90m 142 |\u001b[39m       expect(mockDepartmentService\u001b[33m.\u001b[39mprototype\u001b[33m.\u001b[39mcreateDepartment)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(departmentData)\u001b[33m;\u001b[39m\n     \u001b[90m 143 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/__tests__/app/api/carbon/departments.test.ts:140:31)\n\n  ● Departments API › PUT /api/carbon/departments › updates an existing department\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 400\n\n    \u001b[0m \u001b[90m 222 |\u001b[39m       \n     \u001b[90m 223 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m200\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 225 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({ department\u001b[33m:\u001b[39m updatedDepartment })\u001b[33m;\u001b[39m\n     \u001b[90m 226 |\u001b[39m       expect(mockDepartmentService\u001b[33m.\u001b[39mprototype\u001b[33m.\u001b[39mupdateDepartment)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(\n     \u001b[90m 227 |\u001b[39m         departmentId\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toBe (src/__tests__/app/api/carbon/departments.test.ts:224:31)\n\n  ● Departments API › PUT /api/carbon/departments › returns 404 when department is not found\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 404\n    Received: 400\n\n    \u001b[0m \u001b[90m 274 |\u001b[39m       \n     \u001b[90m 275 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 276 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m404\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 277 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({ error\u001b[33m:\u001b[39m \u001b[32m'Department not found'\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 278 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 279 |\u001b[39m     \u001b[0m\n\n      at Object.toBe (src/__tests__/app/api/carbon/departments.test.ts:276:31)\n\n  ● Departments API › PUT /api/carbon/departments › returns 403 when user is not authorized to update the department\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 403\n    Received: 400\n\n    \u001b[0m \u001b[90m 308 |\u001b[39m       \n     \u001b[90m 309 |\u001b[39m       \u001b[90m// Assert\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 310 |\u001b[39m       expect(response\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[35m403\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 311 |\u001b[39m       expect(data)\u001b[33m.\u001b[39mtoEqual({ error\u001b[33m:\u001b[39m \u001b[32m'Unauthorized to update this department'\u001b[39m })\u001b[33m;\u001b[39m\n     \u001b[90m 312 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 313 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/__tests__/app/api/carbon/departments.test.ts:310:31)\n","name":"C:\\climabill\\climabill\\src\\__tests__\\app\\api\\carbon\\departments.test.ts","startTime":1748624821443,"status":"failed","summary":""}],"wasInterrupted":false,"coverageMap":{}}
